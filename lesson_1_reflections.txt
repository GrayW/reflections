Q1:
--
How did viewing a diff between two version of a file help you
see the bug that was introduced?

A:
--
Instead of having to manually scroll through the entire file,
it was immediately easy to see the lines that had been changed.
This cuts down on the time required looking for a mistake.
I was also unaware that Windows was able to do this with FC.

Q2:
--
How could having easy access to the entire history of a file
make you a more efficient programmer in the long term?

A:
--
You could spot recurring mistakes and study that area more.

Q3:
--
What do you think are the pros and cons of manually choosing
when to create a commit, like you do in Git, vs having
versions automatically saved, like Google Docs does?

A:
--
Pros:
You have complete control over the save / commit
You can break it in to logical sections

Cons:
A commit could be too big or too small
You could forget to commit / save your work

Q4:
--
Why do you think some version control systems,
like Git, allow saving multiple files in one commit,
while others, like Google Docs, treat each file separately?

A:
--
While working on a document, it's likely that you are
working on one file at a time. When working on other, larger
projects, multiple files may need to be changed for one update.

Q5:
--
How can you use the commands git log and git diff to view the
history of files?

A:
--
You can use git log to look through the commits history
to find the desired one. Once you have found it, you use git
diff to compare the two commits for changes.

Q6:
--
How might using version control make you more confident to
make changes that could break something?

A:
--
By using version control, you are more likely to try different
things knowing that you can revert easily (providing you commit!).
You can also make a different change on an older version to go in
a completely different direction without breaking the latest
working version.

Q7:
--
Now that you have your workspace set up, what do you want to try
using Git for?

A:
--
I want to learn to use Git properly so that I learn best practice
when getting started with Android Development.
