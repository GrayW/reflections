Q1:
--
When would you want to use a remote repository rather than keeping all
your work local?

A:
--
If you work across multiple machines / having more than one contributor?

Q2:
--
Why might you want to always pull changes manually rather than
having Git automatically stay up-to-date with your remote repository?

A:
--
If there are multiple contributors and a change is made, automatically
staying up to date could cause issues?
Manually pulling means you know exactly what you are working with?

Q3:
--
Describe the differences between forks, clones, and branches.
When would you use one instead of another?

A:
--
Fork: GitHub to GitHub Clone
Clone: Local/Local Local/Remote Clone
Branch: Local/Remote off-shoot from master

Fork: When wanting to make changes to someone else's repo but give credit
and not have any of their changes affect you

Clone: When you want a full copy of a repo to work on locally

Branch: When you want to work on an issue/feature without fear of breaking
master

Q4:
--
What is the benefit of having a copy of the last known state of the
remote stored locally?

A:
--
??

Q5:
--
How would you collaborate without using Git or GitHub? What would be
easier, and what would be harder?

A:
--
Email, Chat, Sharepoint, Office365/Google Docs
Would be easier as there is no cloning, pushing, pulling, requests, repos etc
Harder things would depend entirely on the project but online collab tools
have come a very long way since this course I guess.

Q6:
--
When would you want to make changes in a separate branch rather than
directly in master? What benefits does each approach have?

A:
--
This is pretty much the same question as in a previous lesson.
Branching > Features / Changes without editing master.
