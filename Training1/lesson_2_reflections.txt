Q1:
--
What happens when you initialize a repository? Why do you
need to do it?

A:
--
It creates the hidden .git folder and sets the directory as
a git repo that needs to be tracked?
You need to do this so you can track and commit the files?

Q2:
--
How is the staging area different from the working directory
and the repository? What value do you think it offers?

A:
--
Working directory contains all files to be edited and worked on.
Staging area contains files you have finished working on and ready
to commit?

Q3:
--
How can you use the staging area to make sure you have one commit
per logical change?

A:
--
Once you have made the logical change and saved - you would stop
working on that file to add to the staging area ready to commit.
You would also consider the commit type and subject.

Q4:
--
What are some situations when branches would be helpful in keeping
your history organized? How would branches help?

A:
--
Branch out on feature development, allowing you to know exactly when
it was started and completed.

Q5:
--
How do the diagrams help you visualize the branch structure?

A:
--
Allows you to see when and what content each branch had when it
was created, and how far / if at all the master has moved on since
creation.

Q6:
--
What is the result of merging two branches together? Why do we
represent it in the diagram the way we do?

A:
--
Merges the changes of the coins feature in to the latest master branch.
It's represented that way because it's common sense. You wouldn't put it
on the diagram behind an older commit?

Q7:
--
What are the pros and cons of Gitâ€™s automatic merging vs. always doing
merges manually?

A:
--
Pros: Quicker, Easier
Cons: I don't know - I'm here to learn, explain it to me!
